mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
mpg_data <- read.csv('mpg_modified.csv') #import dataset
install.packages("tidyverse")
install.packages("jsonlite")
?read.csv()
?ggplot()
library(tidyverse)
?ggplot()
head(mpg)
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
>?cor()
?cor()
population_table <- read.csv('used_car_data.csv',check.names=F,stringsAsFactors = F)
setwd("~/ucbboot/r_analysis/01_demo")
population_table <- read.csv('used_car_data.csv',check.names=F,stringsAsFactors = F)
mpg_data <- read.csv('mpg_modified.csv') #import dataset
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
>?lm()
?lm()
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)']
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))#generate summary statistics
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("~/ucbboot/r_analysis/challenge")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
mecha_car <- read.csv('MechaCar_mpg.csv',stringsAsFactors = F)
head(mecha_car)
lm(mpg ~ mpg + vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car)
summary(lm(mpg ~ mpg + vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car))
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car))
susp_coil <- read.csv('Suspension_Coil.csv',stringsAsFactors = F)
head(susp_coil)
summarize_coil <- susp_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), .groups = 'keep')
View(summarize_coil)
summarize_coil <- susp_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
View(summarize_coil)
total_summary <- summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
total_summary <- susp_coil %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
View(total_summary)
t.test(susp_coil$1500,paired = T)
?t.test()
t.test(log10(susp_coil$PSI),mu=1500)
t.test(log10(susp_coil$PSI),mu=1500,subset=Lot1)
t.test(log10(susp_coil$PSI),mu=1500,subset(susp_coil,Manufacturing_Lot == 'Lot1'))
lot1 <- subset(susp_coil, Manufacturing_Lot == 'Lot1')
View(lot1)
t.test(log10(lot1$PSI),mu=1500)
lot2 <- subset(susp_coil, Manufacturing_Lot == 'Lot2')
lot3 <- subset(susp_coil, Manufacturing_Lot == 'Lot3')
t.test(log10(lot2$PSI),mu=1500)
t.test(log10(lot3$PSI),mu=1500)
View(lot3)
t.test((lot3$PSI),mu=1500)
t.test((susp_coil$PSI),mu=1500)
t.test((lot1$PSI),mu=1500)
View(lot1)
t.test((lot2$PSI),mu=1500)
t.test((lot3$PSI),mu=1500)
